{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\AddQuote.svelte",
    "..\\..\\NavBar.svelte",
    "..\\..\\Home.svelte",
    "..\\..\\PageHeader.svelte",
    "..\\..\\Quote.svelte",
    "..\\..\\Modal.svelte",
    "..\\..\\Rating.svelte",
    "..\\..\\ModalEdit.svelte",
    "..\\..\\ModalForm.svelte",
    "..\\..\\ModalBasic.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { Router, Link, Route, links } from 'svelte-routing'\n\n  import AddQuote from './routes/AddQuote.svelte'\n  import Authors from './routes/Authors.svelte'\n  import GenerateQuote from './routes/GenerateQuote.svelte'\n  import Home from './routes/Home.svelte'\n  import NavBar from './components/NavBar.svelte'\n  import PageHeader from './components/PageHeader.svelte'\n</script>\n\n<style>\n  :global(body) {\n    color: #717070;\n  }\n\n  :global(a:hover, a:visited, a:link, a:active) {\n    text-decoration: none;\n  }\n</style>\n\n<svelte:head>\n  <!-- Font Awesome -->\n  <link\n    rel=\"stylesheet\"\n    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\n  <!-- Bootstrap 4-->\n  <link\n    rel=\"stylesheet\"\n    href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n    integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n    crossorigin=\"anonymous\" />\n\n  <title>Quotes</title>\n\n</svelte:head>\n\n<div use:links>\n  <Router>\n    <div class=\"container\">\n\n      <PageHeader />\n\n      <NavBar />\n\n      <Route path=\"/\">\n        <Home />\n      </Route>\n\n      <Route path=\"add\">\n        <AddQuote />\n      </Route>\n\n      <Route path=\"generate\">\n        <GenerateQuote />\n      </Route>\n\n      <Route path=\"authors\">\n        <Authors />\n      </Route>\n\n    </div>\n  </Router>\n</div>\n",
    "<script>\r\n  import { fly, fade } from 'svelte/transition'\r\n  import { quintOut } from 'svelte/easing'\r\n\r\n  import QuoteForm from '../components/QuoteForm.svelte'\r\n\r\n  import getRandomQuote from '../services/getRandomQuote.js'\r\n\r\n  let input = {\r\n    en: '',\r\n    author: { name: '' },\r\n  }\r\n  let showModal = false\r\n  let fetchedQuote\r\n\r\n  async function handleClick() {\r\n    fetchedQuote = await getRandomQuote()\r\n    input.en = fetchedQuote.en\r\n    input.author.name = fetchedQuote.author.name\r\n  }\r\n\r\n  async function onSubmit() {\r\n    try {\r\n      await fetch('http://localhost:3000/api/quotes', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(input),\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .form-wrapper {\r\n    border-radius: 17px;\r\n    background-color: #f4f4f4;\r\n  }\r\n</style>\r\n\r\n<div class=\"form-wrapper p-3\">\r\n  <QuoteForm bind:input {onSubmit} />\r\n</div>\r\n\r\n<button type=\"button\" class=\"btn btn-success\" on:click={handleClick}>\r\n  Generate Quote for me\r\n</button>\r\n",
    "<script>\n\n</script>\n\n<style>\n  nav {\n    border-bottom: 1px solid #e5e5e5;\n  }\n</style>\n\n<nav class=\"nav d-flex justify-content-between\">\n  <a href=\"/\" class=\"p-2 text-muted\">Dashboard</a>\n  <a href=\"/add\" class=\"p-2 text-muted\">Add Quote</a>\n  <a href=\"/generate\" class=\"p-2 text-muted\">Generate Quote</a>\n  <a href=\"/authors\" class=\"p-2 text-muted\">Explore Authors</a>\n  <a href=\"/\" class=\"p-2 text-muted\">Link 5</a>\n</nav>\n",
    "<script>\r\n  import ExpandAllMenu from '../components/ExpandAllMenu.svelte'\r\n  import LanguageDropdown from '../components/LanguageDropdown.svelte'\r\n  import Quote from '../components/Quote.svelte'\r\n  import Search from '../components/Search.svelte'\r\n\r\n  const url = 'http://localhost:3000/api/quotes'\r\n\r\n  const languages = [\r\n    { code: 'en', label: 'English' },\r\n    { code: 'gib', label: 'Gibberish' },\r\n  ]\r\n\r\n  let quotes = []\r\n  let quotesFiltered = []\r\n  let selectedLanguage = 'en'\r\n  let expanded = false\r\n  let authors = []\r\n  let selectedAuthors = []\r\n  let search\r\n  let showAuthorDropdown = false\r\n\r\n  $: quotes, search, selectedAuthors, selectedLanguage, setQuotesFiltered()\r\n\r\n  getQuotes()\r\n\r\n  async function getQuotes() {\r\n    try {\r\n      const res = await fetch(url)\r\n      quotes = await res.json()\r\n      authors = getAuthors(quotes)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  function getAuthors(quotes) {\r\n    let authors = []\r\n\r\n    for (let i = 0; i < quotes.length; i++) {\r\n      if (authors.includes(quotes[i].author.name)) {\r\n        continue\r\n      } else {\r\n        authors.push(quotes[i].author.name)\r\n      }\r\n    }\r\n\r\n    return authors.sort()\r\n  }\r\n\r\n  function authorFilter(quote) {\r\n    if (selectedAuthors.length > 0) {\r\n      return selectedAuthors.includes(quote.author.name)\r\n    }\r\n    return true\r\n  }\r\n\r\n  function searchFilter(quote) {\r\n    if (search) {\r\n      let searchInput = search.toLowerCase()\r\n      return (\r\n        quote.author.name.toLowerCase().includes(searchInput) ||\r\n        quote[selectedLanguage].toLowerCase().includes(searchInput)\r\n      )\r\n    }\r\n    return true\r\n  }\r\n\r\n  function quoteMeetsFilters(quote) {\r\n    return searchFilter(quote) && authorFilter(quote)\r\n  }\r\n\r\n  function setQuotesFiltered() {\r\n    quotesFiltered = quotes.filter(quoteMeetsFilters)\r\n  }\r\n\r\n  async function onQuoteDelete() {\r\n    alert('Quote deleted!')\r\n    await getQuotes()\r\n  }\r\n\r\n  async function onQuoteUpdate() {\r\n    await getQuotes()\r\n  }\r\n\r\n  function toggleAuthorDropdown() {\r\n    showAuthorDropdown = !showAuthorDropdown\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .filter-bar {\r\n    background-color: #f4f4f4;\r\n    border-bottom: 1px solid #e5e5e5;\r\n  }\r\n\r\n  .white-background {\r\n    background-color: white;\r\n  }\r\n</style>\r\n\r\n<!-- Filter Bar -->\r\n<div class=\"filter-bar d-flex justify-content-between p-2\">\r\n\r\n  <!-- Search Bar -->\r\n  <form class=\"form-inline\">\r\n    <Search bind:search />\r\n  </form>\r\n\r\n  <!-- Author Dropdown -->\r\n  <div class=\"dropdown\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-outline-secondary dropdown-toggle white-background\"\r\n      on:click={toggleAuthorDropdown}>\r\n      Authors\r\n    </button>\r\n\r\n    {#if showAuthorDropdown}\r\n      <div class=\"dropdown-menu show p-1\">\r\n        {#each authors as author}\r\n          <div class=\"form-check\">\r\n            <label class=\"form-check-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"form-check-input\"\r\n                value={author}\r\n                bind:group={selectedAuthors} />\r\n              {author}\r\n            </label>\r\n          </div>\r\n        {/each}\r\n      </div>\r\n    {/if}\r\n\r\n  </div>\r\n\r\n  <!-- Expand/Collapse menu -->\r\n  <ExpandAllMenu bind:expanded />\r\n\r\n  <!-- Language Dropdown -->\r\n  <LanguageDropdown {languages} bind:selectedLanguage />\r\n\r\n</div>\r\n\r\n<div class=\"quotes\">\r\n  {#each quotesFiltered as quote (quote.id)}\r\n    <!-- need keyed each because we are filtering quotes in UI -->\r\n    <Quote\r\n      {quote}\r\n      {selectedLanguage}\r\n      {expanded}\r\n      {onQuoteDelete}\r\n      {onQuoteUpdate} />\r\n  {/each}\r\n</div>\r\n",
    "<script>\n\n</script>\n\n<style>\n  .page-header {\n    border-bottom: 1px solid #e5e5e5;\n  }\n\n  .page-header-title {\n    font-family: 'Playfair Display', Georgia, 'Times New Roman', serif;\n    font-size: 2.25rem;\n    font-weight: bold;\n  }\n</style>\n\n<header class=\"page-header\">\n  <div class=\"row d-flex align-items-center header-content\">\n    <div class=\"col-4\">\n      <a href=\"/\" class=\"text-muted\">Do something 1</a>\n    </div>\n    <div class=\"col-4 text-center page-header-title\" id=\"page-title\">\n      <a href=\"/\" class=\"text-dark\">Quotes</a>\n    </div>\n    <div class=\"col-4 text-right\">\n      <a href=\"/\" class=\"text-muted\">Sign Up</a>\n    </div>\n  </div>\n</header>\n",
    "<script>\r\n  import { fade } from 'svelte/transition'\r\n\r\n  import LongText from './LongText.svelte'\r\n  import Modal from './Modal.svelte'\r\n  import QuoteForm from './QuoteForm.svelte'\r\n  import Rating from './Rating.svelte'\r\n\r\n  export let quote\r\n  export let selectedLanguage\r\n  export let expanded\r\n  export let onQuoteDelete\r\n  export let onQuoteUpdate\r\n\r\n  let input\r\n  let showModal = false\r\n\r\n  function canCloseModal() {\r\n    if (input != quote) {\r\n      // user edited quote\r\n      if (confirm('Are you sure you want to exit? Your changes will be lost')) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    } else {\r\n      // user didn't make any changes\r\n      return true\r\n    }\r\n  }\r\n\r\n  async function deleteQuote() {\r\n    try {\r\n      await fetch(`http://localhost:3000/api/quotes/${quote.id}`, {\r\n        method: 'DELETE',\r\n      })\r\n      onQuoteDelete()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  async function onSubmit() {\r\n    try {\r\n      await fetch(`http://localhost:3000/api/quotes/${quote.id}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(input),\r\n      })\r\n      showModal = false\r\n      onQuoteUpdate()\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  function openQuoteForm() {\r\n    input = { ...quote }\r\n    showModal = true\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .quote {\r\n    background-color: #eee;\r\n    color: #444;\r\n    padding: 18px;\r\n    margin: 15px;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n\r\n  .author {\r\n    font-size: 30px;\r\n  }\r\n\r\n  .quote-contents {\r\n    padding: 2px;\r\n  }\r\n\r\n  .rating {\r\n    font-size: 18px;\r\n  }\r\n</style>\r\n\r\n<div class=\"quote\" id={quote.id} transition:fade|local>\r\n\r\n  <div class=\"author\">{quote.author.name}</div>\r\n\r\n  <div class=\"quote-contents\">\r\n    <LongText text={quote[selectedLanguage]} {expanded} />\r\n  </div>\r\n\r\n  {#if quote.rating !== null}\r\n    <div class=\"rating\">\r\n      <Rating rating={quote.rating} />\r\n    </div>\r\n  {/if}\r\n\r\n  <a class=\"p-1\" href=\"/\" on:click|preventDefault={deleteQuote}>\r\n    <i class=\"fa fa-trash\" />\r\n  </a>\r\n\r\n  <a href=\"/\" on:click|preventDefault={openQuoteForm}>\r\n    <i class=\"fa fa-pencil\" />\r\n  </a>\r\n\r\n</div>\r\n\r\n<Modal bind:showModal {canCloseModal}>\r\n  <span slot=\"title\">Update Quote</span>\r\n  <span slot=\"body\">\r\n    <QuoteForm bind:input {onSubmit} />\r\n  </span>\r\n</Modal>\r\n",
    "<script>\r\n  import { fade, fly } from 'svelte/transition'\r\n\r\n  export let canCloseModal = () => true\r\n  export let showModal\r\n\r\n  function toggleModal() {\r\n    showModal = !showModal\r\n  }\r\n\r\n  function handleClose() {\r\n    if (canCloseModal()) {\r\n      toggleModal()\r\n    }\r\n    return\r\n  }\r\n  $: {\r\n    if (showModal) {\r\n      document.body.classList.add('no-scroll')\r\n    } else {\r\n      document.body.classList.remove('no-scroll')\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .modal-dialog,\r\n  .modal-content {\r\n    /* 80% of window height */\r\n    height: 80%;\r\n  }\r\n  .modal-body {\r\n    /* 100% = dialog height, 120px = header + footer */\r\n    max-height: calc(100% - 120px);\r\n    overflow-y: auto;\r\n  }\r\n  :global(.no-scroll) {\r\n    overflow: hidden;\r\n  }\r\n</style>\r\n\r\n{#if showModal}\r\n  <!-- The Modal -->\r\n  <div\r\n    class=\"modal\"\r\n    style=\"display: block;\"\r\n    transition:fly={{ y: 200, duration: 500 }}>\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <!-- Modal Header -->\r\n        <div class=\"modal-header\">\r\n          <h4 class=\"modal-title\">\r\n            <slot name=\"title\">Name not provided</slot>\r\n          </h4>\r\n          <button type=\"button\" class=\"close\" on:click={handleClose}>\r\n            &times;\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Modal body -->\r\n        <div class=\"modal-body\">\r\n          <slot name=\"body\">Modal Body</slot>\r\n        </div>\r\n\r\n        <!-- Modal footer -->\r\n        <!-- <div class=\"modal-footer\">\r\n          <slot name=\"footer\" />\r\n        </div> -->\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal-backdrop show\" transition:fade />\r\n{/if}\r\n",
    "<script>\r\n  export let rating\r\n\r\n  function determineStars(rating) {\r\n    const ratingRounded = Math.round(rating * 2) / 2\r\n    let starArray = []\r\n    for (let i = 1; i <= 5; i++) {\r\n      starArray.push({\r\n        full: ratingRounded - i !== -0.5,\r\n        checked: ratingRounded > i - 1,\r\n      })\r\n    }\r\n    return starArray\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .star {\r\n    margin: 2px;\r\n  }\r\n\r\n  .checked {\r\n    color: orange;\r\n  }\r\n</style>\r\n\r\n{#each determineStars(rating) as star}\r\n  <span\r\n    class=\"star fa fa-star{!star.full ? '-half-o' : ''}\r\n    {star.checked ? 'checked' : ''}\" />\r\n{/each}\r\n",
    "<script>\r\n  import Modal from './Modal.svelte'\r\n\r\n  export let showModal\r\n\r\n  function toggleModal() {\r\n    showModal = !showModal\r\n  }\r\n\r\n  function handleClose() {\r\n    //onClose()\r\n    toggleModal()\r\n  }\r\n\r\n  function handleSubmit() {\r\n    //onSubmit()\r\n    toggleModal()\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .modal-body {\r\n    /* 100% = dialog height, 120px = header + footer */\r\n    max-height: calc(100% - 120px);\r\n    overflow-y: auto;\r\n  }\r\n</style>\r\n\r\n<Modal {showModal}>\r\n  <!-- Modal Header -->\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      <slot name=\"title\">Name not provided</slot>\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" on:click={handleClose}>&times;</button>\r\n  </div>\r\n\r\n  <!-- Modal body -->\r\n  <div class=\"modal-body\">\r\n    <slot name=\"body\">Modal Body</slot>\r\n  </div>\r\n\r\n  <!-- Modal footer -->\r\n  <div class=\"modal-footer\">\r\n    <button class=\"btn btn-primary\" type=\"submit\" on:click={handleSubmit}>\r\n      <slot name=\"submitBtnText\">Submit</slot>\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-danger\" on:click={handleClose}>\r\n      Close\r\n    </button>\r\n  </div>\r\n</Modal>\r\n",
    "<script>\r\n  import Modal from './Modal.svelte'\r\n\r\n  export let showModal\r\n\r\n  function toggleModal() {\r\n    showModal = !showModal\r\n  }\r\n\r\n  function handleClose() {\r\n    //onClose()\r\n    toggleModal()\r\n  }\r\n\r\n  function handleSubmit() {\r\n    //onSubmit()\r\n    toggleModal()\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .modal-body {\r\n    /* 100% = dialog height, 120px = header + footer */\r\n    max-height: calc(100% - 120px);\r\n    overflow-y: auto;\r\n  }\r\n</style>\r\n\r\n<Modal {showModal}>\r\n  <!-- Modal Header -->\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      <slot name=\"title\">Name not provided</slot>\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" on:click={handleClose}>&times;</button>\r\n  </div>\r\n\r\n  <!-- Modal body -->\r\n  <div class=\"modal-body\">\r\n    <slot name=\"body\" />\r\n  </div>\r\n\r\n  <!-- Modal footer -->\r\n  <div class=\"modal-footer\">\r\n    <button class=\"btn btn-primary\" type=\"submit\" on:click={handleSubmit}>\r\n      <slot name=\"submitBtnText\">Submit</slot>\r\n    </button>\r\n    <button type=\"button\" class=\"btn btn-danger\" on:click={handleClose}>\r\n      Close\r\n    </button>\r\n  </div>\r\n</Modal>\r\n",
    "<script>\r\n  import Modal from './Modal.svelte'\r\n\r\n  export let showModal\r\n\r\n  function toggleModal() {\r\n    showModal = !showModal\r\n  }\r\n\r\n  function handleClose() {\r\n    //onClose()\r\n    toggleModal()\r\n  }\r\n\r\n  function handleSubmit() {\r\n    //onSubmit()\r\n    toggleModal()\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .modal-body {\r\n    /* 100% = dialog height, 120px = header + footer */\r\n    max-height: calc(100% - 120px);\r\n    overflow-y: auto;\r\n  }\r\n</style>\r\n\r\n<Modal {showModal}>\r\n  <!-- Modal Header -->\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">\r\n      <slot name=\"title\">Name not provided</slot>\r\n    </h4>\r\n    <button type=\"button\" class=\"close\" on:click={handleClose}>&times;</button>\r\n  </div>\r\n\r\n  <!-- Modal body -->\r\n  <div class=\"modal-body\">\r\n    <slot name=\"body\">Modal Body</slot>\r\n  </div>\r\n\r\n  <!-- Modal footer\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-danger\" on:click={handleClose}>\r\n      Close\r\n    </button>\r\n  </div> -->\r\n</Modal>\r\n"
  ],
  "names": [],
  "mappings": "AAYU,IAAI,AAAE,CAAC,AACb,KAAK,CAAE,OAAO,AAChB,CAAC,AAEO,oCAAoC,AAAE,CAAC,AAC7C,eAAe,CAAE,IAAI,AACvB,CAAC;ACiBD,aAAa,cAAC,CAAC,AACb,aAAa,CAAE,IAAI,CACnB,gBAAgB,CAAE,OAAO,AAC3B,CAAC;ACjCD,GAAG,cAAC,CAAC,AACH,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC;ACoFD,WAAW,eAAC,CAAC,AACX,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC,AAED,iBAAiB,eAAC,CAAC,AACjB,gBAAgB,CAAE,KAAK,AACzB,CAAC;AC7FD,YAAY,eAAC,CAAC,AACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAClC,CAAC,AAED,kBAAkB,eAAC,CAAC,AAClB,WAAW,CAAE,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAClE,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,IAAI,AACnB,CAAC;ACkDD,MAAM,aAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,AACf,CAAC,AAED,OAAO,aAAC,CAAC,AACP,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,eAAe,aAAC,CAAC,AACf,OAAO,CAAE,GAAG,AACd,CAAC,AAED,OAAO,aAAC,CAAC,AACP,SAAS,CAAE,IAAI,AACjB,CAAC;ACxDD,2BAAa,CACb,cAAc,cAAC,CAAC,AAEd,MAAM,CAAE,GAAG,AACb,CAAC,AACD,WAAW,cAAC,CAAC,AAEX,UAAU,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAC9B,UAAU,CAAE,IAAI,AAClB,CAAC,AACO,UAAU,AAAE,CAAC,AACnB,QAAQ,CAAE,MAAM,AAClB,CAAC;ACrBD,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,GAAG,AACb,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,MAAM,AACf,CAAC;ACFD,WAAW,eAAC,CAAC,AAEX,UAAU,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAC9B,UAAU,CAAE,IAAI,AAClB,CAAC;ACJD,WAAW,eAAC,CAAC,AAEX,UAAU,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAC9B,UAAU,CAAE,IAAI,AAClB,CAAC;ACJD,WAAW,eAAC,CAAC,AAEX,UAAU,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAC9B,UAAU,CAAE,IAAI,AAClB,CAAC"
}